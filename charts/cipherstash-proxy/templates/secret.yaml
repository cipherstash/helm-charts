{{- if .Values.secrets.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "cipherstash-proxy.fullname" . }}-secrets
  namespace: {{ include "cipherstash-proxy.namespace" . }}
  labels:
    {{- include "cipherstash-proxy.labels" . | nindent 4 }}
type: Opaque
data:
  {{- $databasePassword := .Values.secrets.databasePassword | default .Values.database.password }}
  {{- if $databasePassword }}
  database-password: {{ $databasePassword | b64enc | quote }}
  {{- else }}
  {{- fail "database password is required when secrets.create is true. Provide either secrets.databasePassword or database.password" }}
  {{- end }}
  {{- $cipherstashClientKey := .Values.secrets.cipherstashClientKey | default .Values.cipherstash.clientKey }}
  {{- if $cipherstashClientKey }}
  cipherstash-client-key: {{ $cipherstashClientKey | b64enc | quote }}
  {{- else }}
  {{- fail "CipherStash client key is required when secrets.create is true. Provide either secrets.cipherstashClientKey or cipherstash.clientKey" }}
  {{- end }}
  {{- $cipherstashClientAccessKey := .Values.secrets.cipherstashClientAccessKey | default .Values.cipherstash.clientAccessKey }}
  {{- if $cipherstashClientAccessKey }}
  cipherstash-client-access-key: {{ $cipherstashClientAccessKey | b64enc | quote }}
  {{- else }}
  {{- fail "CipherStash client access key is required when secrets.create is true. Provide either secrets.cipherstashClientAccessKey or cipherstash.clientAccessKey" }}
  {{- end }}
  {{- $databaseHost := .Values.secrets.databaseHost | default .Values.database.host }}
  {{- if $databaseHost }}
  database-host: {{ $databaseHost | b64enc | quote }}
  {{- else }}
  {{- fail "database host is required when secrets.create is true. Provide either secrets.databaseHost or database.host" }}
  {{- end }}
  {{- $databaseName := .Values.secrets.databaseName | default .Values.database.name }}
  {{- if $databaseName }}
  database-name: {{ $databaseName | b64enc | quote }}
  {{- else }}
  {{- fail "database name is required when secrets.create is true. Provide either secrets.databaseName or database.name" }}
  {{- end }}
  {{- $databasePort := .Values.secrets.databasePort | default .Values.database.port }}
  {{- if $databasePort }}
  database-port: {{ $databasePort | b64enc | quote }}
  {{- else }}
  {{- fail "database port is required when secrets.create is true. Provide either secrets.databasePort or database.port" }}
  {{- end }}
  {{- $databaseUsername := .Values.secrets.databaseUsername | default .Values.database.username }}
  {{- if $databaseUsername }}
  database-username: {{ $databaseUsername | b64enc | quote }}
  {{- else }}
  {{- fail "database username is required when secrets.create is true. Provide either secrets.databaseUsername or database.username" }}
  {{- end }}
  {{- $cipherstashWorkspaceCrn := .Values.secrets.cipherstashWorkspaceCrn | default .Values.cipherstash.workspaceCrn }}
  {{- if $cipherstashWorkspaceCrn }}
  cipherstash-workspace-crn: {{ $cipherstashWorkspaceCrn | b64enc | quote }}
  {{- else }}
  {{- fail "CipherStash workspace CRN is required when secrets.create is true. Provide either secrets.cipherstashWorkspaceCrn or cipherstash.workspaceCrn" }}
  {{- end }}
  {{- $cipherstashClientId := .Values.secrets.cipherstashClientId | default .Values.cipherstash.clientId }}
  {{- if $cipherstashClientId }}
  cipherstash-client-id: {{ $cipherstashClientId | b64enc | quote }}
  {{- else }}
  {{- fail "CipherStash client ID is required when secrets.create is true. Provide either secrets.cipherstashClientId or cipherstash.clientId" }}
  {{- end }}
{{- end }}
